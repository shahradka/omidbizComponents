<?xml version="1.0" encoding="UTF-8"?>
<f:root 
	xmlns:f="http://ajax4jsf.org/cdk/template" 
	xmlns:c=" http://java.sun.com/jsf/core" 
	xmlns:ui=" http://ajax4jsf.org/cdk/ui"
	xmlns:u=" http://ajax4jsf.org/cdk/u"
	xmlns:jsp=" http://ajax4jsf.org/cdk/jsp"
	xmlns:x=" http://ajax4jsf.org/cdk/x"
	class="org.omidbiz.renderkit.html.ProcessStepChartRenderer"
	baseclass="org.omidbiz.renderkit.ProcessStepChartRenderBase"
	component="org.omidbiz.component.UIProcessStepChart" 
	>
	
	<f:clientid var="clientId"/>
	<h:styles>css/processStepChart.css</h:styles>

	<f:call name="initializeMask">
	
		<vcp:body>
			<script>
			//<![CDATA[
			jQuery(document).ready(function(){
				var id = "#{this:getJQueryId(context, component)}";
				colorfy("#"+id);
				allSelector = jQuery("#"+id).find(".selector input");
				jQuery("#"+id).find(".selector input").click(function(){
						var elm = jQuery(this);
						var mustDisable = false;
						allSelector.each(function(){
							if(mustDisable == false)
							{
								jQuery(this).parents(".step").removeAttr("status");
							}
							else
							{
								jQuery(this).parents(".step").attr("status","disabled");
							}
							if(jQuery(this).is(elm))
							{
								mustDisable = true;
							}
						});
						colorfy("#"+id);
				});
			});
			function colorfy(id){
				var color = [5,60,100,190,250];
				var enabledSteps = jQuery(id).find(".step:not([status='disabled'])");
				var disabledSteps = jQuery(id).find(".step[status='disabled']");
				var counter = 0;
				enabledSteps.each(function(){
					jQuery(this).find(".step-sign").css({"border-color":"hsl("+color[counter]+",80%,40%)"});
					jQuery(this).find(".step-item").css({"background-color":"hsl("+color[counter]+",80%,80%)","border-color":"hsl("+color[counter]+",80%,40%)"});
					jQuery(this).find("input:not(.selector input[type='radio'])").removeAttr("disabled");
					counter ++;
				});
				disabledSteps.each(function(){
					jQuery(this).find(".step-sign").removeAttr("style");
					jQuery(this).find(".step-item").removeAttr("style");
					jQuery(this).find("input:not(.selector input[type='radio'])").attr("disabled","disabled");
					jQuery(this).find("input:not(.selector input[type='radio'])").val("");
				});
			}
		    function onlyNumeric (e) {
			    
		        // Allow: backspace, delete, tab, escape, enter and .
		        if (jQuery.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
		             // Allow: Ctrl/cmd+A
		            (e.keyCode == 65 && (e.ctrlKey === true || e.metaKey === true)) ||
		             // Allow: Ctrl/cmd+C
		            (e.keyCode == 67 && (e.ctrlKey === true || e.metaKey === true)) ||
		             // Allow: Ctrl/cmd+X
		            (e.keyCode == 88 && (e.ctrlKey === true || e.metaKey === true)) ||
		             // Allow: home, end, left, right
		            (e.keyCode >= 35 && e.keyCode <= 39)) {
		                 // let it happen, don't do anything
		                 return;
		        }
		        // Ensure that it is a number and stop the keypress
		        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
		            e.preventDefault();
		        }
		    }			
			//]]>
			</script>
		
		</vcp:body>
	
	</f:call>
	
</f:root>
